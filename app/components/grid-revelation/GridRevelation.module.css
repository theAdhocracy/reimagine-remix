.gridRevelation {
	display: flex;
	flex-direction: column;
	gap: 4rem;

	h2,
	h3 {
		font-weight: 400;
	}

	header {
		display: flex;
		flex-wrap: wrap;
		gap: 1rem 2rem;

		h2 {
			width: 100%;
		}

		p,
		div {
			flex-basis: calc(50% - 1rem);
			place-self: center;
			min-width: 20ch;
		}

		div {
			display: flex;
			flex-direction: column;
			gap: 1rem;
		}

		a {
			font-size: 0.75rem;
		}
	}
}

.cardGrid {
	display: grid;
	grid-template-columns: repeat(
		auto-fill,
		minmax(min(18rem, max(min(calc(50% - 2rem), 15rem), 10rem)), 1fr)
	);
	gap: 2rem;

	section {
		--bg-color: var(--c-bg-block);
		--text-color: var(--c-text);
		--button-color: var(--c-highlight);
		--button-rotate: 0deg;
		--icon-color: var(--c-text-invert);

		display: flex;
		flex-direction: column;
		gap: 1rem;
		width: 100%;
		aspect-ratio: 1 / 1;
		padding: 1.5rem;
		background-color: var(--bg-color);
		color: var(--text-color);

		h3 {
			font-size: clamp(1rem, 0.913rem + 0.4348vi, 1.25rem);
			line-height: 1.3;
		}

		p {
			font-size: 0.875rem;
		}

		button {
			display: none;
			margin-inline-start: auto;
			padding: 0.75rem;
			aspect-ratio: 1 / 1;
			border: none;
			border-radius: 50%;
			background-color: var(--button-color);
			rotate: var(--button-rotate);
			stroke: var(--icon-color);
			transition: rotate 0.5s ease;
		}

		@media (scripting: enabled) {
			button {
				display: block;
			}

			&:not([data-toggled]) {
				p {
					display: none;
				}

				h3 {
					flex-grow: 1;
				}
			}

			&[data-toggled] {
				--bg-color: var(--c-highlight);
				--text-color: var(--c-text-invert);
				--button-color: var(--c-text-invert);
				--button-rotate: 45deg;
				--icon-color: var(--c-text);

				p {
					flex-grow: 1;
				}

				button:hover,
				button:focus-visible {
					outline-color: currentColor;
				}
			}
		}
	}
}
